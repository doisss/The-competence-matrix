// Массив с задачами
const tasks = {
    frontend: {
        junior: [
            { title: "Создание простой формы", description: "Создать форму для регистрации пользователей с полями: имя, email, пароль и кнопкой 'Отправить'.", skills: "HTML, CSS, базовый JavaScript" },
            { title: "Сортировка списка", description: "Написать функцию, которая сортирует массив объектов по заданному полю (например, по возрасту).", skills: "JavaScript" },
            { title: "Создание галереи изображений", description: "Создать простую галерею изображений, которая позволяет пользователям просматривать изображения.", skills: "HTML, CSS, JavaScript" },
            { title: "Валидация формы", description: "Добавить валидацию в форму регистрации, чтобы проверять корректность введенных данных (например, email и пароль).", skills: "JavaScript" },
            { title: "Реализация модального окна", description: "Создать модальное окно, которое открывается по нажатию кнопки и закрывается по нажатию кнопки закрытия или клику вне окна.", skills: "HTML, CSS, JavaScript" },
            { title: "Таблица с сортировкой", description: "Создать таблицу, данные в которой можно сортировать по столбцам при нажатии на заголовки столбцов.", skills: "HTML, CSS, JavaScript" },
            { title: "Реализация вкладок (Tabs)", description: "Создать интерфейс с вкладками, которые позволяют переключаться между разными разделами контента.", skills: "HTML, CSS, JavaScript" },
            { title: "Реализация карусели", description: "Создать карусель изображений, которая автоматически прокручивает изображения и позволяет пользователю управлять прокруткой.", skills: "HTML, CSS, JavaScript" },
            { title: "Анимация при наведении", description: "Добавить анимацию при наведении курсора на элементы списка, например, плавное увеличение размера элемента.", skills: "CSS" },
            { title: "Фильтрация списка", description: "Создать список элементов с полем ввода для фильтрации списка по введенному тексту.", skills: "HTML, CSS, JavaScript" },
            { title: "Создание таблицы пользователей", description: "Создать базовую таблицу пользователей в базе данных с полями: ID, имя, email.", skills: "SQL, базовые запросы" },
            { title: "Простой запрос SELECT", description: "Написать SQL-запрос для извлечения всех данных из таблицы пользователей.", skills: "SQL" },
            { title: "Добавление пользователя", description: "Написать SQL-запрос для добавления нового пользователя в таблицу.", skills: "SQL, INSERT" },
            { title: "Обновление записи", description: "Написать SQL-запрос для обновления email пользователя по ID.", skills: "SQL, UPDATE" },
            { title: "Удаление пользователя", description: "Написать SQL-запрос для удаления пользователя из таблицы по ID.", skills: "SQL, DELETE" }
        ],
        middle: [
            { title: "Создание Todo приложения", description: "Создать приложение для управления списком дел с возможностью добавления, редактирования и удаления задач. Реализовать сохранение данных в localStorage.", skills: "JavaScript, React, CSS, LocalStorage" },
            { title: "Создание адаптивного дизайна", description: "Реализовать страницу с адаптивным дизайном, которая корректно отображается на различных устройствах (мобильные телефоны, планшеты, десктопы).", skills: "HTML, CSS (Flexbox/Grid), Media Queries" },
            { title: "Работа с API", description: "Создать интерфейс для получения данных из внешнего API и отображения их на странице.", skills: "JavaScript, React, Fetch API" },
            { title: "Создание чата", description: "Реализовать веб-чат с возможностью отправки и получения сообщений в реальном времени.", skills: "JavaScript, WebSocket" },
            { title: "Создание простого графика", description: "Реализовать график с использованием библиотеки Chart.js и отобразить данные, полученные из API.", skills: "JavaScript, Chart.js" },
            { title: "Реализация Drag and Drop", description: "Создать интерфейс с элементами, которые можно перетаскивать и менять местами.", skills: "HTML, CSS, JavaScript" },
            { title: "Создание темной и светлой тем", description: "Реализовать переключение между темной и светлой темами для веб-приложения.", skills: "CSS, JavaScript" },
            { title: "Создание многостраничного приложения", description: "Создать многостраничное приложение с использованием React Router для навигации между страницами.", skills: "React, React Router" },
            { title: "Реализация поиска по списку", description: "Создать компонент поиска, который фильтрует список элементов по введенному тексту.", skills: "React, JavaScript" },
            { title: "Создание уведомлений", description: "Реализовать систему уведомлений для веб-приложения, которая показывает сообщения пользователю.", skills: "JavaScript, CSS" },
            { title: "Нормализация базы данных", description: "Оптимизировать структуру базы данных с использованием нормализации до 3NF.", skills: "SQL, Нормализация" },
            { title: "Создание сложного запроса JOIN", description: "Написать SQL-запрос с использованием INNER JOIN для получения данных из двух связанных таблиц.", skills: "SQL, JOIN" },
            { title: "Работа с транзакциями", description: "Реализовать транзакцию для внесения изменений в несколько таблиц базы данных.", skills: "SQL, транзакции" },
            { title: "Реализация индексации", description: "Настроить индексы для ускорения запросов к базе данных.", skills: "SQL, индексация" },
            { title: "Создание резервного копирования", description: "Реализовать систему резервного копирования для базы данных.", skills: "SQL, резервное копирование" }
        ],
        senior: [
            { title: "Оптимизация производительности", description: "Проанализировать и оптимизировать производительность существующего React-приложения, устранить проблемы с производительностью.", skills: "React, Profiler, оптимизация рендеринга, мемоизация" },
            { title: "Создание сложного компонента", description: "Создать компонент календаря с возможностью выбора дат, переключения между месяцами и отображения событий. Должен быть интегрирован с внешним API для загрузки событий.", skills: "React, JavaScript, интеграция с API" },
            { title: "Реализация SSR (Server-Side Rendering)", description: "Настроить SSR для существующего React-приложения с использованием Next.js.", skills: "React, Next.js, SSR" },
            { title: "Реализация Code Splitting", description: "Внедрить Code Splitting в существующее приложение для уменьшения размера загружаемых файлов и ускорения загрузки.", skills: "React, Webpack, Code Splitting" },
            { title: "Создание PWA (Progressive Web App)", description: "Превратить существующее приложение в PWA, добавив возможность офлайн-работы и установки на устройства.", skills: "React, Service Workers, PWA" },
            { title: "Оптимизация загрузки изображений", description: "Реализовать ленивую загрузку изображений и оптимизацию их размеров для улучшения производительности.", skills: "JavaScript, React, оптимизация изображений" },
            { title: "Создание собственного хука", description: "Написать и использовать собственный React-хук для управления состоянием или побочными эффектами.", skills: "React" },
            { title: "Реализация доступа по ролям", description: "Внедрить систему управления доступом к компонентам и маршрутам в зависимости от ролей пользователей.", skills: "React, JavaScript, управление доступом" },
            { title: "Реализация сложного взаимодействия с API", description: "Создать интерфейс для сложного взаимодействия с внешним API, включающего параллельные запросы и обработку ошибок.", skills: "React, JavaScript, Fetch API" },
            { title: "Создание компонента для больших данных", description: "Разработать компонент, способный обрабатывать и отображать большие объемы данных с использованием виртуализации.", skills: "React, JavaScript, оптимизация" },
            { title: "Миграция базы данных", description: "Реализовать миграцию базы данных с использованием инструмента миграции (например, Flyway).", skills: "SQL, Миграция, Flyway" },
            { title: "Репликация базы данных", description: "Настроить репликацию базы данных для обеспечения отказоустойчивости.", skills: "SQL, Репликация" },
            { title: "Создание кластерной базы данных", description: "Реализовать кластеризацию базы данных для повышения производительности и масштабируемости.", skills: "SQL, Кластеризация" },
            { title: "Работа с большими данными", description: "Разработать запросы для эффективного управления большими объемами данных.", skills: "SQL, Big Data" },
            { title: "Оптимизация запросов", description: "Проанализировать и оптимизировать сложные запросы для повышения производительности.", skills: "SQL, Оптимизация запросов" }
        ]
    },
    backend: {
        junior: [
            { title: "Создание простого API", description: "Создать RESTful API для управления ресурсами пользователей (создание, получение, обновление, удаление).", skills: "Node.js, Express, базовые HTTP запросы" },
            { title: "Работа с базой данных", description: "Создать и подключиться к базе данных, реализовать CRUD операции для одной таблицы (например, таблицы пользователей).", skills: "SQL, Node.js, Express" },
            { title: "Валидация данных", description: "Реализовать валидацию данных, получаемых от клиентов, перед сохранением их в базу данных.", skills: "Node.js, Express, валидация данных" },
            { title: "Обработка ошибок", description: "Реализовать обработку ошибок и создание пользовательских сообщений об ошибках для API.", skills: "Node.js, Express, обработка ошибок" },
            { title: "Создание логов", description: "Внедрить систему логирования для отслеживания запросов и ошибок в приложении.", skills: "Node.js, Express, логирование" },
            { title: "Аутентификация с помощью токенов", description: "Реализовать аутентификацию пользователей с использованием токенов JWT.", skills: "Node.js, Express, JWT" },
            { title: "Реализация пагинации", description: "Добавить пагинацию к API для управления большими наборами данных.", skills: "Node.js, Express, SQL" },
            { title: "Реализация поиска по данным", description: "Реализовать возможность поиска по базе данных через API.", skills: "Node.js, Express, SQL" },
            { title: "Реализация CORS", description: "Настроить CORS (Cross-Origin Resource Sharing) для вашего API.", skills: "Node.js, Express, CORS" },
            { title: "Загрузка файлов", description: "Реализовать возможность загрузки файлов через API и сохранение их на сервере.", skills: "Node.js, Express, Multer" },
            { title: "Создание схемы базы данных", description: "Создать схему базы данных для приложения с таблицами для пользователей и продуктов.", skills: "SQL, Node.js, схемы БД" },
            { title: "Настройка связи между таблицами", description: "Реализовать связи 'один ко многим' между таблицами пользователей и заказов.", skills: "SQL, связи" },
            { title: "Создание CRUD-операций", description: "Реализовать операции создания, чтения, обновления и удаления для таблицы продуктов.", skills: "SQL, Node.js, CRUD" },
            { title: "Реализация поиска в базе данных", description: "Добавить возможность поиска данных по полям в базе данных.", skills: "SQL, Node.js, поиск" },
            { title: "Реализация пагинации", description: "Добавить пагинацию для вывода данных с использованием базы данных.", skills: "Node.js, SQL, пагинация" }
        ],
        middle: [
            { title: "Аутентификация и авторизация", description: "Реализовать систему аутентификации пользователей с JWT. Реализовать защиту маршрутов, доступных только аутентифицированным пользователям.", skills: "Node.js, Express, JWT, middleware" },
            { title: "Работа с внешними API", description: "Создать серверное приложение, которое интегрируется с внешним API (например, OpenWeatherMap) для получения данных о погоде и сохранения их в базе данных.", skills: "Node.js, Express, Fetch API, SQL" },
            { title: "Реализация фоновых задач", description: "Реализовать систему для выполнения фоновых задач, таких как отправка email или очистка данных.", skills: "Node.js, Express, Background Jobs" },
            { title: "Реализация WebSocket", description: "Создать сервер для обработки сообщений в реальном времени с использованием WebSocket.", skills: "Node.js, Express, WebSocket" },
            { title: "Реализация GraphQL", description: "Реализовать API с использованием GraphQL вместо REST.", skills: "Node.js, Express, GraphQL" },
            { title: "Создание системы уведомлений", description: "Реализовать систему уведомлений на сервере с отправкой email или SMS пользователям.", skills: "Node.js, Express, email/SMS API" },
            { title: "Реализация API Rate Limiting", description: "Внедрить ограничение запросов к API для предотвращения DDOS-атак.", skills: "Node.js, Express, Rate Limiting" },
            { title: "Реализация системных транзакций", description: "Создать API, который выполняет сложные транзакции с использованием базы данных.", skills: "Node.js, Express, SQL, транзакции" },
            { title: "Реализация очередей задач", description: "Настроить систему очередей для обработки задач, таких как обработка заказов или отправка сообщений.", skills: "Node.js, Express, очереди" },
            { title: "Реализация API Gateway", description: "Создать API Gateway для управления несколькими микросервисами.", skills: "Node.js, Express, API Gateway" },
            { title: "Оптимизация запросов", description: "Проанализировать и оптимизировать запросы к базе данных для ускорения работы приложения.", skills: "SQL, Node.js, оптимизация" },
            { title: "Создание сложных запросов с JOIN", description: "Реализовать запросы с использованием INNER JOIN и OUTER JOIN для получения данных из нескольких таблиц.", skills: "SQL, JOIN" },
            { title: "Реализация кэша для базы данных", description: "Реализовать кэширование запросов к базе данных для повышения производительности.", skills: "Node.js, кэширование, Redis" },
            { title: "Реализация миграций базы данных", description: "Настроить миграции базы данных для внесения изменений в структуру без потери данных.", skills: "Node.js, SQL, миграции" },
            { title: "Реализация транзакций", description: "Реализовать транзакции для группировки операций в базе данных.", skills: "SQL, транзакции, Node.js" }
        ],
        senior: [
            { title: "Микросервисная архитектура", description: "Разработать микросервисную архитектуру для приложения. Реализовать несколько микросервисов, которые взаимодействуют друг с другом через API Gateway.", skills: "Node.js, Express, микросервисы, API Gateway" },
            { title: "Оптимизация базы данных", description: "Оптимизировать существующую базу данных, улучшить индексацию, реорганизовать запросы для повышения производительности.", skills: "SQL, оптимизация запросов, индексация" },
            { title: "Реализация CI/CD", description: "Настроить непрерывную интеграцию и непрерывную доставку для вашего проекта с использованием инструментов, таких как Jenkins или GitHub Actions.", skills: "CI/CD, Jenkins, GitHub Actions" },
            { title: "Реализация масштабирования", description: "Разработать стратегию масштабирования серверного приложения для поддержки большого количества пользователей.", skills: "Node.js, Express, Load Balancing, Clustering" },
            { title: "Реализация серверного рендеринга", description: "Создать серверное приложение, которое рендерит страницы на сервере перед отправкой их клиенту.", skills: "Node.js, Express, SSR" },
            { title: "Реализация кеширования", description: "Внедрить систему кеширования для уменьшения нагрузки на сервер и базы данных.", skills: "Node.js, Express, кеширование" },
            { title: "Создание системы мониторинга", description: "Реализовать систему мониторинга производительности и ошибок для серверного приложения.", skills: "Node.js, Express, мониторинг" },
            { title: "Реализация CQRS и Event Sourcing", description: "Реализовать паттерны CQRS и Event Sourcing для управления состоянием приложения.", skills: "Node.js, CQRS, Event Sourcing" },
            { title: "Реализация multi-tenant архитектуры", description: "Создать серверное приложение с поддержкой multi-tenant архитектуры, чтобы обслуживать нескольких клиентов с общим кодом.", skills: "Node.js, Express, multi-tenant архитектура" },
            { title: "Реализация Zero-Downtime Deployment", description: "Настроить развертывание приложения без простоя, чтобы обновления не влияли на пользователей.", skills: "Node.js, CI/CD, Zero-Downtime Deployment" },
            { title: "Проектирование распределённой базы данных", description: "Реализовать распределённую базу данных для повышения доступности и масштабируемости.", skills: "SQL, распределённые базы данных" },
            { title: "Реализация шардирования базы данных", description: "Настроить шардирование для распределения данных между несколькими базами данных.", skills: "SQL, шардирование" },
            { title: "Мониторинг производительности базы данных", description: "Настроить мониторинг производительности базы данных для выявления узких мест.", skills: "Node.js, SQL, мониторинг" },
            { title: "Реализация репликации базы данных", description: "Настроить репликацию для обеспечения отказоустойчивости и резервирования данных.", skills: "SQL, репликация" },
            { title: "Реализация политик безопасности базы данных", description: "Настроить доступы и роли в базе данных для обеспечения безопасности данных.", skills: "SQL, безопасность" }
        ]
    },
    fullstack: {
        junior: [
            { title: "Простое веб-приложение", description: "Создать простое веб-приложение для управления задачами (CRUD операции) с использованием фронтенда на React и бекенда на Node.js.", skills: "React, Node.js, Express, SQL" },
            { title: "Интеграция фронтенда и бекенда", description: "Создать форму регистрации на фронтенде и обработать данные на бекенде, сохранив их в базу данных.", skills: "React, Node.js, Express, SQL" },
            { title: "Создание системы комментариев", description: "Создать систему комментариев для блога с возможностью добавления, редактирования и удаления комментариев.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация функционала поиска", description: "Реализовать поиск по базе данных с отображением результатов на фронтенде.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация регистрации и авторизации", description: "Создать форму регистрации и авторизации пользователей с сохранением данных на сервере.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация загрузки файлов", description: "Реализовать возможность загрузки файлов через фронтенд и их обработку на сервере.", skills: "React, Node.js, Express, Multer" },
            { title: "Реализация системы уведомлений", description: "Создать систему уведомлений для пользователей, которая отправляет уведомления по email.", skills: "React, Node.js, Express, email API" },
            { title: "Создание блога", description: "Создать блог-приложение с возможностью добавления, редактирования и удаления постов, а также комментирования.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация пагинации", description: "Добавить пагинацию на фронтенд и бекенд для работы с большими наборами данных.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация аутентификации с OAuth", description: "Внедрить аутентификацию через сторонние сервисы, такие как Google или Facebook, используя OAuth.", skills: "React, Node.js, Express, OAuth" },
            { title: "Реализация CRUD операций на фронтенде и бекенде", description: "Создать CRUD-интерфейс на фронтенде и поддержать его на бекенде с использованием базы данных.", skills: "React, Node.js, SQL" },
            { title: "Создание таблиц с отношениями", description: "Создать таблицы с отношениями 'один ко многим' для пользователей и заказов, реализовать их на фронтенде.", skills: "React, SQL, Node.js" },
            { title: "Работа с данными через API", description: "Создать API для работы с базой данных и отобразить данные на фронтенде.", skills: "React, Node.js, SQL" },
            { title: "Реализация фильтрации данных", description: "Добавить возможность фильтрации данных на фронтенде, данные должны загружаться из базы данных.", skills: "React, Node.js, SQL" },
            { title: "Создание страницы редактирования", description: "Создать форму для редактирования данных пользователя и сохранить изменения в базе данных через API.", skills: "React, Node.js, SQL" }
        ],
        middle: [
            { title: "Веб-приложение с аутентификацией", description: "Создать веб-приложение с аутентификацией пользователей. Реализовать регистрацию, вход и доступ к защищенным маршрутам.", skills: "React, Node.js, Express, JWT" },
            { title: "Интеграция с внешними API", description: "Создать веб-приложение, которое получает данные из внешнего API (например, GitHub) и отображает их на фронтенде. Реализовать кеширование данных на сервере.", skills: "React, Node.js, Express, Fetch API, SQL" },
            { title: "Реализация чата", description: "Создать чат-приложение с использованием WebSocket для обмена сообщениями в реальном времени.", skills: "React, Node.js, Express, WebSocket" },
            { title: "Создание динамической таблицы", description: "Создать таблицу с возможностью сортировки, фильтрации и поиска по данным на фронтенде и бекенде.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация геолокации", description: "Реализовать функционал геолокации для отображения местоположения пользователей на карте.", skills: "React, Node.js, Express, Google Maps API" },
            { title: "Создание личного кабинета", description: "Создать личный кабинет пользователя с возможностью редактирования профиля и настройки уведомлений.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация загрузки изображений", description: "Создать функционал загрузки и обработки изображений на сервере с отображением на фронтенде.", skills: "React, Node.js, Express, Multer" },
            { title: "Реализация отзывов", description: "Создать систему отзывов с возможностью оставлять, редактировать и удалять отзывы о продуктах.", skills: "React, Node.js, Express, SQL" },
            { title: "Реализация защиты от CSRF", description: "Реализовать защиту от CSRF атак на сервере и фронтенде.", skills: "React, Node.js, Express, CSRF защита" },
            { title: "Создание системы рейтингов", description: "Создать систему рейтингов для пользователей или продуктов с возможностью голосования.", skills: "React, Node.js, Express, SQL" },
            { title: "Создание REST API для базы данных", description: "Создать REST API для работы с базой данных, включая поддержку операций GET, POST, PUT, DELETE.", skills: "Node.js, Express, SQL" },
            { title: "Создание админ-панели для управления данными", description: "Реализовать админ-панель для управления данными в базе данных с использованием React и Node.js.", skills: "React, Node.js, SQL" },
            { title: "Создание API с пагинацией и фильтрацией", description: "Добавить на сервере возможность фильтрации и пагинации данных, отобразить их на фронтенде.", skills: "Node.js, SQL, React" },
            { title: "Реализация аутентификации с OAuth", description: "Внедрить аутентификацию через сторонние сервисы, такие как Google или Facebook, используя OAuth и сохранение данных в базе.", skills: "React, Node.js, Express, OAuth" },
            { title: "Оптимизация работы с данными", description: "Оптимизировать работу с большими объемами данных на фронтенде и бекенде.", skills: "React, Node.js, SQL, оптимизация" }
        ],
        senior: [
            { title: "Разработка SPA с SSR", description: "Создать одностраничное приложение (SPA) с серверным рендерингом (SSR) для улучшения SEO и скорости загрузки.", skills: "React, Node.js, Express, Next.js" },
            { title: "Создание PWA", description: "Превратить веб-приложение в прогрессивное веб-приложение (PWA) с возможностью работы офлайн и установки на устройства.", skills: "React, Node.js, Express, Service Workers" },
            { title: "Микросервисная архитектура", description: "Реализовать микросервисную архитектуру для веб-приложения, разделив фронтенд и бекенд на отдельные сервисы.", skills: "React, Node.js, микросервисы, Docker" },
            { title: "Реализация CI/CD", description: "Настроить непрерывную интеграцию и доставку для фронтенда и бекенда с использованием Jenkins или GitHub Actions.", skills: "React, Node.js, CI/CD" },
            { title: "Реализация GraphQL", description: "Создать API с использованием GraphQL вместо REST для оптимизации запросов данных.", skills: "React, Node.js, Express, GraphQL" },
            { title: "Оптимизация производительности", description: "Оптимизировать производительность веб-приложения, включая ленивую загрузку компонентов, оптимизацию изображений и кеширование.", skills: "React, Node.js, оптимизация, кеширование" },
            { title: "Реализация темизации", description: "Реализовать систему темизации для веб-приложения с возможностью переключения тем пользователями.", skills: "React, Node.js, CSS-in-JS" },
            { title: "Реализация DevOps pipeline", description: "Создать pipeline для автоматизированного развертывания веб-приложения с использованием инструментов DevOps.", skills: "React, Node.js, CI/CD, Docker, Kubernetes" },
            { title: "Реализация тестирования", description: "Написать юнит и интеграционные тесты для фронтенда и бекенда с использованием современных инструментов тестирования.", skills: "React, Node.js, Jest, Mocha" },
            { title: "Реализация мониторинга", description: "Настроить мониторинг и алертинг для веб-приложения с использованием инструментов, таких как Prometheus и Grafana.", skills: "React, Node.js, мониторинг, Prometheus, Grafana" },
            { title: "Проектирование масштабируемой базы данных", description: "Создать архитектуру базы данных, которая легко масштабируется при росте нагрузки.", skills: "Node.js, SQL, проектирование" },
            { title: "Реализация кластеризации базы данных", description: "Настроить кластеризацию для повышения доступности базы данных.", skills: "Node.js, SQL, кластеризация" },
            { title: "Работа с NoSQL базами данных", description: "Реализовать функционал с использованием NoSQL базы данных (например, MongoDB) в приложении.", skills: "Node.js, MongoDB, NoSQL" },
            { title: "Настройка системы резервного копирования", description: "Реализовать автоматическое резервное копирование данных на сервере.", skills: "Node.js, SQL, резервное копирование" },
            { title: "Оптимизация запросов в базе данных", description: "Проанализировать и оптимизировать сложные SQL-запросы для ускорения работы.", skills: "Node.js, SQL, оптимизация запросов" }
        ]
    }
};

// Функция для генерации случайной задачи

async function generateTask() {
    const direction = await document.getElementById("direction").value;
    const level = await document.getElementById("level").value;
    
    
    const selectedTasks = tasks[direction][level];
    const randomIndex = Math.floor(Math.random() * selectedTasks.length);
    const task = selectedTasks[randomIndex];

    // Получаем элемент с классом overlay-text
    const overlayTextElement = await document.querySelector('.overlay-text');
    
    // Заменяем его содержимое на текст задачи
    overlayTextElement.innerHTML = `
        <h1>${task.title}</h1>
        <p><strong>Описание:</strong> ${task.description}</p>
        <p><strong>Необходимые навыки:</strong> ${task.skills}</p>
        <p><strong>Оставшееся время:</strong> <span id="task-timer">60:00</span></p>
        <div class="button-group">
            <button onclick="window.location.reload()" class="btn">Вернуться назад</button>
            <button onclick="completeTask()" class="btn btn-complete">Завершить</button>
        </div>
    `;
    // Запускаем таймер
    startTimer(3600);
}

// Функция для обработки завершения задачи
function completeTask() {
    const overlayTextElement = document.querySelector('.overlay-text');

    // Заменяем содержимое на слова благодарности и адрес почты
    overlayTextElement.innerHTML = `
        <h1>Спасибо за выполнение задачи!</h1>
        <p>Пожалуйста, отправьте своё решение на следующий адрес:</p>
        <p><strong>SkillGrade@mail.ru</strong></p>
        <button onclick="window.location.reload()" class="btn">Вернуться назад</button>
    `;
    // Останавливаем таймер
    clearInterval(timerInterval);
}

// Функция запуска таймера
let timerInterval;

function startTimer(duration) {
    let timer = duration; // Устанавливаем начальное время (3600 секунд = 60 минут)

    timerInterval = setInterval(function () {
        const minutes = String(Math.floor(timer / 60)).padStart(2, '0');
        const seconds = String(timer % 60).padStart(2, '0');
        //document.getElementById("timer").textContent = `${minutes}:${seconds}`;

        // Обновляем содержимое элемента с таймером
        document.getElementById("task-timer").textContent = `${minutes}:${seconds}`;

        // Уменьшаем значение таймера
        timer--;

        if (timer < 0) {
            clearInterval(timerInterval);
            // Заменяем содержимое на слова благодарности и адрес почты
            const overlayTextElement = document.querySelector('.overlay-text');
            overlayTextElement.innerHTML = `
                <h1>Время вышло!</h1>
                <p>Спасибо за участие!</p>
                <p>Пожалуйста, отправьте своё решение на следующий адрес:</p>
                <p><strong>SkillGrade@mail.ru</strong></p>
                <button onclick="window.location.reload()" class="btn">Вернуться назад</button>
            `;
        }
    }, 1000);
}


// Добавление слушателя на кнопку
document.getElementById("generate-task").addEventListener("click", generateTask);